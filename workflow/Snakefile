import pandas as pd
import os


configfile: "config/config.yml"


# Read sample list
sample_df = pd.read_csv(config["sample_list"], index_col=0)
samples = sample_df.to_dict(orient="index")


rule all:
    """Workflow pseudo rule"""
    input:
        expand(
            "results/fastp/{sample}.fastp.R{i}.fastq.gz",
            sample=samples.keys(),
            i=[1, 2],
        ),


rule fastp:
    output:
        R1="results/fastp/{sample}.fastp.R1.fastq.gz",
        R2="results/fastp/{sample}.fastp.R2.fastq.gz",
    log:
        log="logs/fastp/{sample}.fastp.log",
        json="logs/fastp/{sample}.fastp.json",
    input:
        R1=lambda wildcards: sorted(
            [x for x in samples[wildcards.sample]["fwd_libs"].split(";")]
        ),
        R2=lambda wildcards: sorted(
            [x for x in samples[wildcards.sample]["rev_libs"].split(";")]
        ),
    envmodules:
        "bioinfo-tools",
        "fastp/0.23.2",
    conda:
        "envs/fastp.yml"
    resources:
        runtime=60 * 10,
    threads: 10
    params:
        tmpR1="$TMPDIR/{sample}.R1.fastq.gz",
        tmpR2="$TMPDIR/{sample}.R2.fastq.gz",
        outR1="$TMPDIR/{sample}.fastp.R1.fastq.gz",
        outR2="$TMPDIR/{sample}.fastp.R2.fastq.gz",
        complexity_threshold=config["fastp"]["complexity_threshold"],
    shell:
        """
        cat {input.R1} > {params.tmpR1}
        cat {input.R2} > {params.tmpR2}
        fastp --thread {threads} -y -Y {params.complexity_threshold} \
            -i {params.tmpR1} -I {params.tmpR2} -o {params.outR1} \
            -O {params.outR2} -j {log.json} > {log.log} 2>&1
        mv {params.outR1} {output.R1}
        mv {params.outR2} {output.R2}
        rm {params.tmpR1} {params.tmpR2}
        """


rule multiqc:
    output:
        "results/multiqc/multiqc.html",
        dir("results/multiqc/multiqc_data"),
    log:
        "logs/multiqc/multiqc.log",
    input:
        fastp=expand("logs/fastp/{sample}.fastp.json", sample=samples.keys()),
    conda:
        "envs/multiqc.yml"
    envmodules:
        "bioinfo-tools",
        "MultiQC/1.12",
    params:
        tmpdir="$TMPDIR/biodivcao",
        outdir=lambda wildcards, output: os.path.dirname(output[0]),
    shell:
        """
        mkdir -p {params.tmpdir}
        cp {input} {params.tmpdir}
        multiqc -o {params.tmpdir} -n multiqc > {log} 2>&1
        mv {params.tmpdir}/multiqc* {params.outdir}
        """
